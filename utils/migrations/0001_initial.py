# Generated by Django 3.1.3 on 2020-12-02 13:47

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pkg_name', models.CharField(max_length=20, unique=True)),
                ('pkg_code', models.CharField(max_length=2, unique=True)),
                ('pkg_description', models.CharField(blank=True, max_length=100, null=True)),
                ('pkg_fixed', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('height', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('width', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('length', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('volume', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('weight', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('pkg_coef', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=50, null=True, unique=True)),
                ('province', models.CharField(max_length=50, null=True)),
                ('country', models.CharField(max_length=50, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('mpoly', django.contrib.gis.db.models.fields.MultiPolygonField(default='SRID=4326;MULTIPOLYGON (((0 0, 0 1, 1 1, 1 0, 0 0)))', srid=4326)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(max_length=50, unique=True)),
                ('status_desc', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('prov_name', models.CharField(max_length=20, unique=True)),
                ('prov_code', models.CharField(max_length=2, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('state_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='utils.state')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('driv_name', models.CharField(max_length=20, unique=True)),
                ('vehicle_type', models.CharField(max_length=20)),
                ('vehicle_brand', models.CharField(blank=True, max_length=30, null=True)),
                ('vehicle_model', models.CharField(blank=True, max_length=30, null=True)),
                ('vehicle_year', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(2999)])),
                ('vehicle_plate', models.CharField(max_length=20, unique=True)),
                ('vehicle_capacity', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('prov_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='utils.provider')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_name', models.CharField(max_length=20, unique=True)),
                ('client_code', models.CharField(max_length=2, unique=True)),
                ('price_calc', models.PositiveIntegerField(choices=[(0, 'Variable'), (1, 'Fixed')], default=0)),
                ('unit_type', models.PositiveIntegerField(choices=[(0, 'Volume'), (1, 'Weight')], default=0)),
                ('base_price', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit_price', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('state_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='utils.state')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
